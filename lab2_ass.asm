global _start

section .data
arr1 db 01100100b, 11111111b, 11111010b, 11110000b, 00000001b, 00000101b, 00000110b, 00000111b, 00001001b
sravn db 01100100b
section .bss ; не инициалированные данные
arr2 resb 10 ; резервирование количества слов(байт)

section .text
_start:
mov ecx, 10 ; регистр общего назначения
mov esi, arr1 ; индекс источника (так же регистр общего назначения)
mov edi, [sravn] ; индекс приемника (так же регистр общего назначения)
xor eax, eax ; Обнуляем eax
lp1:
lodsb ; загружает в еax байт, из ячейки памяти указанной в индексе источника
cmp eax, edi;
jnbe lp ; если меньше то переход к lp
add ebx, 1;
loop lp1 ; в качестве счетчика используется ecx
jmp end
lp:
add edx, eax; счетчик количества элеентов меньше sravn
loop lp1
end:
mov eax, 1
mov ebx, 0
int 0x80 ; прерывание для выполнения кода в ядре 
